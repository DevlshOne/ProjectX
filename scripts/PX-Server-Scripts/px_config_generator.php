#!/usr/bin/php
<?
/**
 * Generates configuration files for a PX server, based on the provided "server id"
 * Written by: Jonathan Will
 */

	$base_dir = "/var/www/html/";

	$config_base_dir = "/etc/asterisk/";
	//$config_base_dir = "/root/test-asterisk/";

	
	$reload_asterisk = true;
	
	
	
	
	
	
	
/*** DONT EDIT BELOW HERE ***/
	
	
	if(count($argv) < 2){

	//	die("Missing Arguments\nPlease use: ".$argv[0]." <SERVER ID>\nSERVER ID being the ID of the PX \"servers\" record.\n");
		echo "Loading Server ID from file '/etc/px-server-id'\n";
		
		$server_id = intval(file_get_contents("/etc/px-server-id"));
		
	}else{

		$server_id = intval($argv[1]);
		
	}

	if($server_id < 0){
		
		die("Server ID not specified.\n".
			"Either pass the server ID via command line: ".$argv[0]." <SERVER ID>\n".
			"Or edit /etc/px-server-id and specify it.\n");
	}


	
	

	include_once($base_dir."site_config.php");
	include_once($base_dir."db.inc.php");
//	include_once($_SESSION['site_config']['basedir']."/dbapi/dbapi.inc.php");
//	include_once($_SESSION['site_config']['basedir']."/util/db_utils.php");

	connectPXDB();
	
	

	/**function checkViciExtensions($server_id){

		// LOOKUP ALL THE EXTENSIONS FOR SPECIFIED SERVER ID
		$res = query("SELECT * FROM extensions WHERE server_id='$server_id' AND `status`='enabled' ORDER BY `number` ASC");
		while($row = mysqli_fetch_array($res, MYSQLI_ASSOC)){

			// CHECK IF THEY EXIST IN VICIDIAL PHONES TABLE

			// IF NOT EXIST: ADD THEM

			// IF EXISTS: UPDATE THE PW?
		}

	}*/



	$iaxregisterout = "";

	//$meetmeout = "; GENERATED BY px_config_generator!\n\n[general]\n\n\n[rooms]\n\n";
	$iaxout = "";


	$sipout = "";



	$sql = "SELECT * FROM `extensions` WHERE `server_id`='$server_id' AND `status`='enabled' ORDER BY `number` ASC";
	
	//echo $sql;

	$cnt=0;
	$res = query($sql, 1);
	while($row = mysqli_fetch_array($res, MYSQLI_ASSOC)){
		
		//print_r($row);

		$ext = $row['number'];
		$pw = $row['password'];
		$iaxpw = $row['iax_password'];
		$iaxhost=$row['iax_host'];
		$context = (trim($row['context']))?$row['context']:"px-sip";

		//$meetmeout .= "conf => 1024".$ext."\n";

		$sipout .= "[$ext]
type=friend
host=dynamic
defaultuser=$ext
secret=$pw
accountcode=$ext
callerid=\"\" <$ext>
mailbox=$ext
context=$context
qualify=yes

";


		$iaxregisterout .= "register => ".$ext.":".$iaxpw."@".$iaxhost."\n";


		$iaxout .= "[$ext]
type=user
username=$ext
secret=$iaxpw
host=$iaxhost
callbackextension=$ext
insecure=port,invite
context=px-vici
peercontext=px-vici
qualify=yes
disallow=all
allow=ulaw
canreinvite=no

";

		
		$cnt++;
		
	} // END EXTENSION LOOP



	/*
FILES TO CREATE
	
	iax-px.conf
	iax-px-registers.conf
	sip-px-extensions.conf
*/

	
	if(file_put_contents($config_base_dir."/iax-px.conf", $iaxout) === FALSE){
		
		echo "ERROR: Cannot write ".$config_base_dir."/iax-px.conf\n";
		
	}
	
	if(file_put_contents($config_base_dir."/sip-px-extensions.conf", $sipout) === FALSE){
		
		echo "ERROR: Cannot write ".$config_base_dir."/sip-px-extensions.conf\n";
		
	}
	
	
	if(file_put_contents($config_base_dir."/iax-px-registers.conf", $iaxregisterout) === FALSE){
		
		echo "ERROR: Cannot write ".$config_base_dir."/iax-px-registers.conf\n";
		
	}
	
	echo "Finished creating configs for $cnt extensions on Server# $server_id\n";

	
	if($reload_asterisk){
		
		echo "Reloading Asterisk ".`/usr/sbin/asterisk -rx reload`;
		echo "\n";
		
	}else{
		echo "Skipping asterisk reload (config setting)\n";
	}

